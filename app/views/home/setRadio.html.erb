<%- unless flash[:alert].blank? %>
    <%- alert=flash[:alert] %>
<% else %>
    <%= javascript_tag "var AUTH_TOKEN = #{form_authenticity_token.inspect};" if protect_against_forgery? %>

    <head>
        <script src="http://code.jquery.com/jquery-1.8.2.js"></script>
        <script src="http://code.jquery.com/ui/1.9.1/jquery-ui.js"></script>

        <script>
        $(function() {
            // Create a pallete and a field
            var $pallete = $( "#pallete" ),
                $field = $( ".dropbox" );
            
            // let the pallete items be draggable
            $( "li", $pallete ).draggable({
                revert: "invalid", // when not dropped, the item will revert back to its initial position
                containment: "document",
                helper: "clone",
                cursor: "move",
                //stack: $(this)
            });

            // This section fills the radio box if a radio is already associated with the mote
            <% if @mote.radio %>
              $copy = $("#<%= @mote.radio.id.to_s %>").clone().appendTo($field);
              $copy.position( { of: ".dropbox", my: 'center center', at: 'center center' } );
            <% end %>
            $( "li", $field).draggable({
                revert: "invalid", // when not dropped, the item will revert back to its initial position
                containment: "document",
                cursor: "move"
            });
            $(".delete").droppable({
                accept: ".dropbox > li",
                drop: function(event, props){
                   $.ajax({
                        url: 'remove_radio',
                        type: 'POST',
                        data: { authenticity_token: AUTH_TOKEN, mote: '<%= @mote.id.to_s %>', radio: props.draggable.attr('id') 
                        }
                    });
                    props.draggable.remove()
                }
            });
             $field.droppable({
                accept: "#pallete > li",
                hoverclass: 'hover',
                drop: function(event, props){
                    $('li', this).remove();
                    var $clone = props.draggable.clone();
                    $clone.appendTo($(this));
                    $clone.position( { of: $(this), my: 'center center', at: 'center center' } );
                    //$clone.append('<%= image_tag("Red_x_small.PNG",class: "removebtn") %>')
                    $.ajax({
                        url: 'post_radio',
                        type: 'POST',
                        data: { authenticity_token: AUTH_TOKEN, mote: '<%= @mote.id.to_s %>', radio: $clone.attr('id') 
                        }
                    });
                    $clone.draggable({
                        revert: "invalid", // when not dropped, the item will revert back to its initial position
                        containment: "document",
                        cursor: "move"
                    }); 
                }
             });
        });
        </script>
    </head>
    <body>
     <h2>Set Radio for <%= @mote.name %></h2>

    <div class="span3 well">
        <div id = "field" class ="dropbox droppable_item">
            Radio
        </div>
        <div id = "trash" class ="delete">
            <%= image_tag('trash.png') %>
        </div>
    </div>

    <div class="span10 well">
     
    <ul id="pallete" class="pallete">
        <%- @radios.each do |radio|%>
            <li id="<%= radio.id.to_s %>" class="draggable">
                <%= radio.name %>
                <%= image_tag('antenna.png') %>
            </li>
        <%-end%>
        
    </ul>
    </div>

    <div class="span3 well">
        <div class="btn-group btn-group-vertical span2">
            <%= link_to "Sensors", {:action => "setSensor", :id => @mote.id.to_s }, 
                :class => "btn btn-large btn-block"%>
            <%= link_to "Transforms", {:action => "setTransform", :id => @mote.id.to_s },
                :class => "btn btn-large btn-block"%>
            <%= link_to "Done", "/motes/" + @mote.id.to_s,
                            :class => "btn btn-large btn-block"%>
        </div>
    </div> 
<% end %>


